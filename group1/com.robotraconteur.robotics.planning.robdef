service com.robotraconteur.robotics.planning

stdver 0.9

import com.robotraconteur.geometry
import com.robotraconteur.robotics.robot
import com.robotraconteur.robotics.trajectory
import com.robotraconteur.geometry.shapes
import com.robotraconteur.identifier

using com.robotraconteur.geometry.NamedTransform
using com.robotraconteur.geometry.NamedPose
using com.robotraconteur.geometry.Pose
using com.robotraconteur.geometry.Vector3
using com.robotraconteur.geometry.Vector6
using com.robotraconteur.geometry.Box
using com.robotraconteur.robotics.trajectory.JointTrajectory
using com.robotraconteur.robotics.robot.RobotInfo
using com.robotraconteur.robotics.robot.RobotState
using com.robotraconteur.geometry.shapes.ShapeObject
using com.robotraconteur.identifier.Identifier

enum PlannerStatusCode
	is_not_configured = -2,
	failure = -1,
	unknown = 0,
	is_configured = 1,
	running = 2,
	success = 3	
end

enum ConstraintType
	default = 0,
	constraint,
	cost	
end

struct EnvState
	field double[]{string} joints
	field NamedTransform{string} transforms
	field varvalue{string} extended
end

struct DynamicCartesionPoseConstraint
	field ConstraintType constraint_type
	field string target
	field string link
	field Pose tcp
	field Pose target_tcp
	field Vector6 coeffs	
end

struct CartesianPoseConstraint
	field ConstraintType constraint_type
	field string link
	field Pose tcp
	field Pose target_tcp
	field Vector6 coeffs	
end

struct CartesionVelocityConstraint
	field ConstraintType constraint_type
	field string link
	field double max_displacement
end

struct JointPositionConstraint
	field ConstraintType constraint_type
	field double[] targets
	field double[] upper_tols
	field double[] lower_tols
	field double[] coeffs	
end

struct JointVelocityConstraint
	field ConstraintType constraint_type
	field double[] targets
	field double[] upper_tols
	field double[] lower_tols
	field double[] coeffs	
end

struct JointAccelerationConstraint
	field ConstraintType constraint_type
	field double[] targets
	field double[] upper_tols
	field double[] lower_tols
	field double[] coeffs	
end

struct JointJerkConstraint
	field ConstraintType constraint_type
	field double[] targets
	field double[] upper_tols
	field double[] lower_tols
	field double[] coeffs	
end

struct JsonEncodedConstraint
	field string json_constraint
end

struct PlanningRequestWaypointConstraints
	field varvalue{list} constraints
	field varvalue{string} extended
end

struct PlanningRequestTrajectoryConstraints
	field varvalue{list} constraints
	field varvalue{string} extended
end

struct PlanningRequest
	field Identifier device
	field Identifier planner	
	field Box workspace_bounds
	field EnvState start_state
	field PlanningRequestWaypointConstraints{list} waypoints
	field PlanningRequestTrajectoryConstraints{list} trajectory_constraints
	field varvalue{string} planner_specific
	field varvalue{string} extended
end

struct PlanningResponse
	field PlannerStatusCode status_code
	field JointTrajectory joint_trajectory
	field varvalue{string} extended
end

struct ContactResult
	field double distance
	field uint8 shape1_type_id
	field uint8 shape2_type_id
	field string shape1_name
	field string shape2_name
	field uint32 shape1_subid
	field uint32 shape2_subid
	field Vector3 shape1_nearest_point
	field Vector3 shape2_nearest_point
	field Vector3 normal
	field Vector3 shape1_cc_nearest_points
	field Vector3 shape2_cc_nearest_points
	field double cc_time
	field uint8 cc_type
	field varvalue{string} extended
end

struct InvKinResult
	field double[]{list} joints
end

object Planner
	function PlanningResponse{generator} plan(PlanningRequest request)
	
	function ContactResult{list} compute_contacts(EnvState state)
	
	function InvKinResult{list} invkin(string robot_name, NamedPose tcp_pose)
end

object PlanningScene
	property EnvState env_state

	property RobotInfo{string} robots [readonly]
	property RobotState{string} robot_states [readonly]
	property ShapeObject{string} shapes [readonly]
	property NamedTransform{string} transforms [readonly]
	
	function void add_robot(string name, RobotInfo robot, NamedPose pose)
	function void update_robot_info(string robot_name, RobotInfo robot)
	function void update_robot_state(string robot_name, RobotState robot_state)
	
	function void add_shape(string shape_name, ShapeObject shape, NamedPose pose)
	
	function void remove_item(string name)	
	function void move_item(string name, NamedPose transform)
end
